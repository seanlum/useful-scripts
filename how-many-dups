#!/usr/bin/python

import re
import sys

if len(sys.argv) < 3:
	print('not enough arguments')
	print('how-many-dups.py first-list-one.txt file-list-two.txt [<separator expression> [<show duplicates: yes or no>]]')
	exit()

file_a = sys.argv[1]
list_one_file = None
try:
	list_one_file = open(file_a, 'r')
except IOError:
	print('Could not open ' + list_one_file)
	exit()

if list_one_file is None:
	print('Something went wrong with opening ' + file_a)
	exit()

file_b = sys.argv[2]
list_two_file = None
try:
	list_two_file = open(file_b, 'r')
except IOError:
	print('Could not open ' + list_two_file)
	exit()

if list_two_file is None:
	print('Something went wrong with opening ' + file_b)
	exit()

separator = '\n'
if len(sys.argv) > 3:
	if len(sys.argv[3]) > 0:
		separator = sys.argv[3]

try:
	re_pass = re.compile(separator)
	re_pass = None
except:
	print('Could not compile separator expression with python re')
	exit()

show_duplicates = re.match('(y[ea]{0,}[ahsp]{0,}$)', sys.argv[4]) is not None
names = []
duplicates = []

list_one_text = list_one_file.read()
list_two_text = list_two_file.read()
list_one_entities = [line for line in re.split(separator, list_one_text)]
list_two_entities = [line for line in re.split(separator, list_two_text)]

for name in list_two_entities:
	try:
		if list_one_entities.index(name) is not None:
			duplicates.append(name)
		else:
			pass
	except ValueError:
		pass


print('List (' + file_a + ') entries: ' + str(len(list_one_entities)))
print('List (' + file_b + ') entries: ' + str(len(list_two_entities)))
print('Searched for entries from ' + file_b + ' already in ' + file_a)
print('Separated file contents with: ' + separator)
print('Duplicates:' + str(len(duplicates)))
if show_duplicates:
	for dup in duplicates:
		print(dup)
